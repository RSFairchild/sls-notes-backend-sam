AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sls-notes-backend-sam

  Sample SAM Template for sls-notes-backend-sam
Parameters:
    TableName:
        Type: String
        Description: DynamoDbTableName
        Default: sls-notes-backend-prod

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Environment:
      Variables:
        TABLE_NAME: !Ref 'TableName'

Resources:
  AddNoteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/
      Handler: app.add_note_handler
      Runtime: python3.10
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref 'TableName'
      Architectures:
        - x86_64
      Events:
        AddNoteFunction:
          Type: Api 
          Properties:
            Path: /note
            Method: post
  DeleteNoteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/
      Handler: app.delete_note_handler
      Runtime: python3.10
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref 'TableName'
      Architectures:
        - x86_64
      Events:
        DeleteNoteFunction:
          Type: Api 
          Properties:
            Path: /note/t/{timestamp}
            Method: delete
  GetNoteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/
      Handler: app.get_note_handler
      Runtime: python3.10
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref 'TableName'
      Architectures:
        - x86_64
      Events:
        GetNoteFunction:
          Type: Api 
          Properties:
            Path: /note/n/{note_id}
            Method: get
  GetNotesFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/
      Handler: app.get_notes_handler
      Runtime: python3.10
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref 'TableName'
      Architectures:
        - x86_64
      Events:
        GetNotesFunction:
          Type: Api 
          Properties:
            Path: /notes
            Method: get
  UpdateNoteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/
      Handler: app.update_note_handler
      Runtime: python3.10
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref 'TableName'
      Architectures:
        - x86_64
      Events:
        UpdateNoteFunction:
          Type: Api 
          Properties:
            Path: /note
            Method: patch

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  #
  AddNoteApi:
    Description: "API Gateway endpoint URL for Prod stage for Add Note function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/note/"
  AddNoteFunction:
    Description: "AddNote Lambda Function ARN"
    Value: !GetAtt AddNoteFunction.Arn
  AddNoteFunctionIamRole:
    Description: "Implicit IAM Role created for AddNote function"
    Value: !GetAtt AddNoteFunctionRole.Arn
  #
  #
  DeleteNoteApi:
    Description: "API Gateway endpoint URL for Prod stage for Delete Note function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/note/t/{timestamp}"
  DeleteNoteFunction:
    Description: "DeleteNote Lambda Function ARN"
    Value: !GetAtt DeleteNoteFunction.Arn
  DeleteNoteFunctionIamRole:
    Description: "Implicit IAM Role created for DeleteNote function"
    Value: !GetAtt DeleteNoteFunctionRole.Arn
  #
  #
  GetNoteApi:
    Description: "API Gateway endpoint URL for Prod stage for Get Note function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/note/n/{note_id}"
  GetNoteFunction:
    Description: "GetNote Lambda Function ARN"
    Value: !GetAtt GetNoteFunction.Arn
  GetNoteFunctionIamRole:
    Description: "Implicit IAM Role created for GetNote function"
    Value: !GetAtt GetNoteFunctionRole.Arn
  #
  #
  GetNotesApi:
    Description: "API Gateway endpoint URL for Prod stage for Get Notes function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/notes/"
  GetNotesFunction:
    Description: "GetNotes Lambda Function ARN"
    Value: !GetAtt GetNotesFunction.Arn
  GetNotesFunctionIamRole:
    Description: "Implicit IAM Role created for GetNotes function"
    Value: !GetAtt GetNotesFunctionRole.Arn
  #
  #
  UpdateNoteApi:
    Description: "API Gateway endpoint URL for Prod stage for Update Note function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/note/"
  UpdateNoteFunction:
    Description: "UpdateNote Lambda Function ARN"
    Value: !GetAtt UpdateNoteFunction.Arn
  UpdateNoteFunctionIamRole:
    Description: "Implicit IAM Role created for UpdateNote function"
    Value: !GetAtt UpdateNoteFunctionRole.Arn
  #
